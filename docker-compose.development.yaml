services:

  ui:
    image: node:18-alpine
    ports:
      - 5173:5173
    volumes:
      - ./ui/:/home/node/app
      - /home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "npm install && npm run dev"
    env_file:
      - .env
    environment:
      NODE_ENV: development

  api:
    image: node:18-alpine
    ports:
      - 3000:3000
    volumes:
      - ./media/:/media
      - ./api/:/home/node/app
      - /home/node/app/node_modules
    working_dir: /home/node/app/
    command: sh -c "yarn install && yarn dev"
    env_file:
      - .env
    environment:
      MEDIA_DIR: /media
      MONGODB_URI: mongodb://mongo:27017/app_3
      NODE_ENV: development
      PAYLOAD_SECRET: TESTING

  mongo:
    # MONGO_INITDB_ROOT_USERNAME: admin
    # MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27017:27017
    volumes:
      - ./db-share:/share
      - data:/data/db

  mongo-gui:
    container_name: mongo-gui
    image: ugleiton/mongo-gui
    ports:
      - 4321:4321
    environment:
      - MONGO_URL=mongodb://mongo:27017

  mongo-backup:
    image: istepanov/mongodump:4.2
    volumes:
      - mongo-backup:/backup
    environment:
      MONGO_URI: mongodb://mongo:27017
      CRON_SCHEDULE: '0 1 * * *'
    depends_on:
      - mongo

  mongo-admin:
    container_name: mongo-admin
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      # ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      # ME_CONFIG_MONGODB_ADMINPASSWORD: admin
    depends_on:
      - mongo

volumes:
  data:
    external: false
  mongo-backup: