/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    pages: Page;
    media: Media;
    navigations: Navigation;
    posts: Post;
    screenings: Screening;
    filmPrints: FilmPrint;
    types: Type;
    aspectRatios: AspectRatio;
    carriers: Carrier;
    conditions: Condition;
    formats: Format;
    rightholders: Rightholder;
    soundFormats: SoundFormat;
    movies: Movie;
    actors: Actor;
    directors: Director;
    genres: Genre;
    countries: Country;
    languages: Language;
    series: Series;
  };
  globals: {
    site: Site;
  };
}
export interface User {
  id: string;
  name?: string;
  role?: 'admin' | 'moderator' | 'insider';
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Page {
  id: string;
  title: string;
  slug?: string;
  image?: string | Media;
  layout: (
    | {
        content?: {
          [k: string]: unknown;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'content';
      }
    | {
        from?: string;
        until?: string;
        id?: string;
        blockName?: string;
        blockType: 'postsList';
      }
    | {
        from?: string;
        until?: string;
        id?: string;
        blockName?: string;
        blockType: 'screeningsList';
      }
  )[];
  meta: {
    description?: string;
    keywords?: string;
  };
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Media {
  id: string;
  alt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes: {
    card: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    feature: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Navigation {
  id: string;
  type: 'main' | 'footer' | 'socialMedia';
  items: {
    type?: 'internal' | 'external' | 'subnavigation';
    name: string;
    page: string | Page;
    url: string;
    icon?: string | Media;
    subnavigation?: string | Navigation;
    id?: string;
  }[];
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Post {
  id: string;
  title: string;
  slug?: string;
  date: string;
  header: string | Media;
  content: {
    [k: string]: unknown;
  }[];
  link?: string;
  _status?: 'draft' | 'published';
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Screening {
  id: string;
  filmprint?: string | FilmPrint;
  title?: string;
  slug?: string;
  date?: string;
  time?: string;
  moderator?: string;
  guest?: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface FilmPrint {
  id: string;
  title?: string;
  slug?: string;
  movie?: string | Movie;
  type?: 'analogue' | 'digital';
  filmprintType: string | Type;
  duration: number;
  language: string | Language;
  isOriginalLanguage?: boolean;
  subtitles?: string | Language;
  format: string | Format;
  carrier: string | Carrier;
  numActs: number;
  aspectRatio: string | AspectRatio;
  soundFormat: string | SoundFormat;
  condition: string | Condition;
  rightholder: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Movie {
  id: string;
  originalTitle: string;
  slug?: string;
  titleDE: string;
  header: string | Media;
  poster: string | Media;
  directors: string[] | Director[];
  cast?: string | Actor;
  country: string[] | Country[];
  publicationDate: string;
  genres?: string[] | Genre[];
  synopsis: string;
  info: {
    [k: string]: unknown;
  }[];
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Director {
  id: string;
  name: string;
  dateOfBirth?: string;
  dateOfDeath?: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Actor {
  id: string;
  name: string;
  dateOfBirth?: string;
  dateOfDeath?: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Country {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Genre {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Type {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Language {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Format {
  id: string;
  type?: 'analogue' | 'digital';
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Carrier {
  id: string;
  type?: 'analogue' | 'digital';
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface AspectRatio {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface SoundFormat {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Condition {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Rightholder {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Series {
  id: string;
  title: string;
  movies: string[] | Movie[];
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Site {
  id: string;
  favicon?: string | Media;
  title: string;
  homePage: string | Page;
  address?: {
    [k: string]: unknown;
  }[];
}
