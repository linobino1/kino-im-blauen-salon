version: '3.8'

services:
  app:
    build:
      context: ./
      target: runner
      args:
        PAYLOAD_PUBLIC_SERVER_URL: https://${HOSTNAME}
        PAYLOAD_SECRET: ${PAYLOAD_SECRET}
        MONGO_URL: mongodb://db:27017/app
    expose:
      - 3000
    volumes:
      - media:/app/media
    networks:
      - net
    env_file:
      - .env
    environment:
      PORT: 3000
      NODE_ENV: production
      MONGO_URL: mongodb://db:27017/app
      PAYLOAD_CONFIG_PATH: /app/dist/payload.config.js
      PAYLOAD_PUBLIC_SERVER_URL: https://${HOSTNAME}
      NEXT_PUBLIC_SERVER_URL: https://${HOSTNAME}
      NEXTAUTH_URL: https://${HOSTNAME}
      HOSTNAME:
      PAYLOAD_SECRET:
      NEXTAUTH_SECRET:
      VIRTUAL_HOST: ${HOSTNAME}
      LETSENCRYPT_HOST: ${HOSTNAME}
    restart: unless-stopped

  db:
    image: mongo:4.4.18 # last version running without CPU flag AVX
    expose:
      - 27017
    networks:
      - net
    volumes:
      - ./dump:/dump  # for restoring db dumps
      - data:/data/db
    restart: unless-stopped

  proxy:
    container_name: proxy
    image: jwilder/nginx-proxy:alpine
    volumes:
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - vhost:/etc/nginx/vhost.d
      - certs:/etc/nginx/certs:ro
      - /run/docker.sock:/tmp/docker.sock:ro
    networks: 
      - net
    ports:
      - 80:80
      - 443:443
    restart: always

  # redirect www (http/https) -> non-www (https)
  redirect:
    container_name: redirect
    image: adamkdean/redirect
    networks:
      - net
    environment:
      VIRTUAL_HOST: www.${HOSTNAME}
      LETSENCRYPT_HOST: www.${HOSTNAME}
      REDIRECT_LOCATION: https://${HOSTNAME}
      REDIRECT_STATUS_CODE: 301
      PRESERVE_URL: true
    restart: always
  
  certbot:
    image: nginxproxy/acme-companion
    container_name: certbot
    volumes_from:
      - proxy
    environment:
      NGINX_PROXY_CONTAINER: proxy
      DEFAULT_EMAIL: ${EMAIL_ADMIN}
      # ACME_CA_URI: https://acme-staging-v02.api.letsencrypt.org/directory # staging
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

  
volumes:
  data:
  media:
  certs:
  html:
  vhost:
  dhparam:
  acme:

networks:
  net:
    name: net
    external: true
